@startuml
actor "Campus Manager" as user
participant "FrontEnd" as FE
participant "ListFloorsByBuildingHTML" as HTML
participant "ListFloorsByBuildingComponent" as COMP
participant "ListFloorsByBuildingService" as SERV
participant "FloorRoute" as ROUTE
participant "BuildingRoute" as ROUTE2
participant "BackEnd" as BE

activate user
user -> FE: asks to list floors by building
activate FE
FE -> HTML: /floor/listByBuilding
activate HTML
HTML -> COMP: ngOnInit()
activate COMP
COMP -> SERV: listBuildings()
activate SERV
SERV -> ROUTE2: GET /building/getAll
activate ROUTE2
ROUTE2 -> BE: getAllBuildings()
activate BE
BE --> ROUTE2: sends response with BuildingDTO's and http code 200
deactivate BE
ROUTE2 --> SERV: returns response with BuildingDTO's
deactivate ROUTE2
SERV --> COMP: returns response with BuildingDTO's
deactivate SERV
COMP --> HTML: returns response with BuildingDTO's
deactivate COMP
HTML --> FE: returns response with BuildingDTO's
deactivate HTML
FE --> user: shows list of building codes and asks to choose one
deactivate FE
user -> FE: chooses a building code
activate FE
FE -> HTML: inputs data
activate HTML
HTML -> COMP: listFloorsByBuilding()
activate COMP
COMP -> SERV: listFloorsByBuilding()
activate SERV
SERV -> ROUTE: GET /floor/getFloorsByBuildingId/:building_id
activate ROUTE
ROUTE -> BE: getFloorsByBuildingId()
activate BE
BE --> ROUTE: sends response with FloorDTO's and http code 200
deactivate BE
ROUTE --> SERV: returns response with FloorDTO's
deactivate ROUTE
SERV --> COMP: returns response with FloorDTO's
deactivate SERV
COMP --> HTML: returns response with FloorDTO's
deactivate COMP
HTML --> FE: returns response with FloorDTO's
deactivate HTML
FE --> user: shows list of floors of that building

@enduml