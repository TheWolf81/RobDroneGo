@startuml
participant "<<Container C4>>\nFleet+Campus Management" as RDG
participant "Routing" as ROUT
participant "Controller" as CTR
participant "Service" as Serv
participant "Repository" as REPO 
participant "Elevator" as DOMAIN
participant "Mapper" as Mapper
participant "Database" as DB
--> RDG : Post request: "/api/elevator/create"
activate RDG
RDG -> ROUT : Route to "/api/elevator/create"
activate ROUT
ROUT -> CTR : Call "createElevator" method
activate CTR
CTR -> Serv : Call "createElevator" method\n(Using request body as DTO)
activate Serv
Serv -> REPO : Verify if the Elevator's building and floors exist\nand if they belong to said building
activate REPO
REPO -> DB : Contact the Database
activate DB
DB --> REPO : Return the result of the verification
deactivate DB
REPO -> Serv : Return the result of the verification (if error, end the process)
deactivate REPO
Serv -> DOMAIN : Create a new Elevator
activate DOMAIN
DOMAIN -> Serv : Return the created Elevator
deactivate DOMAIN
Serv -> REPO : Call "save" method\n(Using the created Elevator)
activate REPO
REPO -> Mapper : Map the Elevator to persistence data model
activate Mapper
Mapper -> REPO : Return the mapped Elevator
deactivate Mapper
REPO -> DB : Save the Elevator
activate DB
DB --> REPO : Return the saved Elevator
deactivate DB
REPO --> Serv : Return the saved Elevator
deactivate REPO
Serv --> CTR : Return the saved Elevator
deactivate Serv
CTR --> ROUT : Return the saved Elevator
deactivate CTR
ROUT --> RDG : Return the saved Elevator (JSON)
deactivate ROUT
<-- RDG: Return response: saved Elevator in JSON format
deactivate RDG

@enduml
